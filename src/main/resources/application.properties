# Logging
logging.level.com.chumbok.aauth=DEBUG
logging.level.org.springframework.security.authentication=DEBUG

# DB
jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost/aauth?createDatabaseIfNotExist=true
jdbc.user=root
jdbc.pass=root

# JSP
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

# DataSource settings
spring.datasource.url = jdbc:mysql://localhost/aauth
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Run schema.sql to populate data in DB
#spring.datasource.initialize=false

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# OAuth
# curl -XPOST -v -k clientIdPassword:secret@localhost:8080/oauth/token -d grant_type=password -d client_id=clientIdPassword -d client_secret=secret  -d username=admin -d password=admin
# curl -v -H "Authorization: Bearer $TOKEN" localhost:8080/hello

# Redis
#spring.redis.host=localhost
#spring.redis.password=12345678
#spring.redis.port=6379